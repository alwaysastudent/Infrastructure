- name: make sure dedicated_exporter_group exists
  become: yes
  group:
    name: "{{dedicated_exporter_group}}"
    state: present
    system: yes

- name: make sure dedicated_exporter_user exists
  become: yes
  user:
    name: "{{dedicated_exporter_user}}"
    group: "{{dedicated_exporter_group}}"
    shell: /sbin/nologin
    state: present

- name: check that bind_exporter file existed
  stat:
    path: /opt/bind_exporter-0.3.0.linux-amd64.tar.gz
  register: stat_result

- name: download bind_exporter
  become: yes
  get_url:
    url: https://github.com/prometheus-community/bind_exporter/releases/download/v0.3.0/bind_exporter-0.3.0.linux-amd64.tar.gz
    dest: /opt/
  when: stat_result.stat.exists == False

- name: create repo for bind_exporter
  become: yes
  file:
    path: /opt/go
    state: directory
    mode: '0755'

- name: untar
  become: yes
  unarchive:
    src: /opt/bind_exporter-0.3.0.linux-amd64.tar.gz
    dest: /opt/go
    remote_src: yes

- name: Check that the file exists
  stat:
    path: /root/go/src/github.com/digitalocean/bind_exporter/bind_exporter.go
  register: stat_result

- name: go get
  become: yes
  shell: "go get github.com/digitalocean/bind_exporter"
  when: stat_result.stat.exists == False

- name: copy binary
  become: yes
  copy:
    src: /root/go/bin/bind_exporter
    dest: /usr/local/bin/bind_exporter
    mode: u=rwx,g=rx,o=rx
    remote_src: yes

- name: make bind_exporter service
  become: yes
  template:
    src: bind_exporter.service.j2
    dest: /etc/systemd/system/bind_exporter.service
  notify:
    - daemon reload
    - restart bind_exporter

- name: start bind_exporter service
  service:
    name: bind_exporter
    state: started
    enabled: yes
